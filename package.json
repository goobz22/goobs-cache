{
  "name": "goobs-cache",
  "version": "1.2.0",
  "description": "A versatile and efficient caching solution with multiple storage options including two-level server caching, client-side session storage, and in-memory caching. Features encryption, compression, and supports flexible data management across different environments.",
  "main": "src/index.ts",
  "types": "src/index.ts",
  "scripts": {
    "build": "tsc --noEmit && prettier --write \"src/**/*.{ts,tsx}\"",
    "typecheck": "tsc --noEmit",
    "pretty": "prettier --write \"src/**/*.{ts,tsx}\"",
    "prepublishOnly": "yarn build",
    "publish-package": "npm publish"
  },
  "devDependencies": {
    "@types/node": "^20.14.9",
    "prettier": "^3.3.2",
    "typescript": "^5.5.2"
  },
  "dependencies": {
    "@types/react": "^18.3.3",
    "lru-cache": "^10.3.0",
    "react": "^18.3.1"
  },
  "files": [
    "src"
  ],
  "keywords": [
    "caching",
    "cache",
    "two-level-cache",
    "multilevel-cache",
    "tiered-cache",
    "encryption",
    "data-encryption",
    "secure-storage",
    "compression",
    "data-compression",
    "memory-cache",
    "in-memory-cache",
    "persistent-storage",
    "lru-cache",
    "least-recently-used",
    "batch-writing",
    "batch-processing",
    "prefetching",
    "data-prefetching",
    "access-tracking",
    "usage-tracking",
    "key-rotation",
    "encryption-key-rotation",
    "typescript",
    "nodejs",
    "data-storage",
    "high-performance",
    "scalability",
    "fault-tolerance",
    "data-integrity",
    "data-security",
    "configurable",
    "customizable",
    "modular",
    "extensible",
    "open-source",
    "client-side-storage",
    "session-storage",
    "browser-storage",
    "multi-mode-storage",
    "flexible-storage",
    "server-side-cache",
    "client-side-cache",
    "hybrid-storage",
    "adaptive-caching",
    "cross-environment-caching"
  ],
  "author": "Matthew Goluba",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/goobz22/goobs-cache"
  }
}
